03 10 2022 01:39:57.806:DEBUG [config]: Loading config /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/karma.conf.js
03 10 2022 01:39:57.807:DEBUG [config]: autoWatch set to false, because of singleRun
03 10 2022 01:39:57.811:DEBUG [karma-server]: Final config Config {
  LOG_DISABLE: 'OFF',
  LOG_ERROR: 'ERROR',
  LOG_WARN: 'WARN',
  LOG_INFO: 'INFO',
  LOG_DEBUG: 'DEBUG',
  frameworks: [ 'jasmine', '@angular-devkit/build-angular' ],
  protocol: 'http:',
  port: 9876,
  listenAddress: '0.0.0.0',
  hostname: 'localhost',
  httpsServerConfig: {},
  basePath: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey',
  files: [],
  browserConsoleLogOptions: { level: 'debug', format: '%b %T: %m', terminal: true },
  customContextFile: null,
  customDebugFile: null,
  customClientContextFile: null,
  exclude: [
    '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/karma.conf.js'
  ],
  logLevel: 'DEBUG',
  colors: true,
  autoWatch: false,
  autoWatchBatchDelay: 250,
  restartOnFileChange: true,
  usePolling: false,
  reporters: [ 'progress', 'kjhtml' ],
  singleRun: true,
  browsers: [ 'ChromeHeadless' ],
  captureTimeout: 60000,
  pingTimeout: 5000,
  proxies: {},
  proxyValidateSSL: true,
  preprocessors: [Object: null prototype] {},
  preprocessor_priority: {},
  urlRoot: '/',
  upstreamProxy: undefined,
  reportSlowerThan: 0,
  loggers: [
    {
      type: 'console',
      layout: { type: 'pattern', pattern: '%[%d{DATETIME}:%p [%c]: %]%m' }
    }
  ],
  transports: [ 'polling', 'websocket' ],
  forceJSONP: false,
  plugins: [
    {
      'framework:jasmine': [
        'factory',
        [Function: initJasmine] { '$inject': [ 'config.files' ] }
      ],
      'reporter:karma-jasmine': [
        'factory',
        [Function: InjectKarmaJasmineReporter] {
          '$inject': [ 'config.singleRun' ]
        }
      ]
    },
    {
      'launcher:Chrome': [
        'type',
        [Function: ChromeBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      'launcher:ChromeHeadless': [
        'type',
        [Function: ChromeHeadlessBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      'launcher:ChromeCanary': [
        'type',
        [Function: ChromeCanaryBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      'launcher:ChromeCanaryHeadless': [
        'type',
        [Function: ChromeCanaryHeadlessBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      'launcher:Chromium': [
        'type',
        [Function: ChromiumBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      'launcher:ChromiumHeadless': [ 'type', [Function: ChromiumHeadlessBrowser] ],
      'launcher:Dartium': [
        'type',
        [Function: DartiumBrowser] {
          '$inject': [ 'baseBrowserDecorator', 'args' ]
        }
      ],
      test: {
        isJSFlags: [Function: isJSFlags],
        sanitizeJSFlags: [Function: sanitizeJSFlags],
        headlessGetOptions: [Function: headlessGetOptions],
        canaryGetOptions: [Function: canaryGetOptions]
      }
    },
    {
      'reporter:kjhtml': [
        'type',
        [Function: initReporter] {
          '$inject': [ 'config', 'baseReporterDecorator' ]
        }
      ]
    },
    {
      'preprocessor:coverage': [
        'factory',
        [Function: createCoveragePreprocessor] {
          '$inject': [
            'logger',
            'config.basePath',
            'config.reporters',
            'config.coverageReporter'
          ]
        }
      ],
      'reporter:coverage': [
        'type',
        [Function: CoverageReporter] {
          '$inject': [ 'config', 'helper', 'logger', 'emitter' ]
        }
      ]
    },
    {
      'framework:@angular-devkit/build-angular': [
        'factory',
        [Function: init] { '$inject': [ 'config', 'emitter' ] }
      ],
      'reporter:@angular-devkit/build-angular--sourcemap-reporter': [
        'type',
        [Function: sourceMapReporter] {
          '$inject': [ 'baseReporterDecorator', 'config' ]
        }
      ],
      'reporter:@angular-devkit/build-angular--event-reporter': [
        'type',
        [Function: eventReporter] {
          '$inject': [ 'baseReporterDecorator', 'config' ]
        }
      ],
      'middleware:@angular-devkit/build-angular--blocker': [ 'factory', [Function: requestBlocker] ],
      'middleware:@angular-devkit/build-angular--fallback': [ 'factory', [Function: fallbackMiddleware] ]
    }
  ],
  client: {
    args: [],
    useIframe: true,
    runInParent: false,
    captureConsole: true,
    clearContext: false,
    allowedReturnUrlPatterns: [ '^https?://' ],
    jasmine: {}
  },
  defaultClient: {
    args: [],
    useIframe: true,
    runInParent: false,
    captureConsole: true,
    clearContext: false,
    allowedReturnUrlPatterns: [ '^https?://' ],
    jasmine: {}
  },
  browserDisconnectTimeout: 2000,
  browserDisconnectTolerance: 0,
  browserNoActivityTimeout: 30000,
  processKillTimeout: 2000,
  concurrency: Infinity,
  failOnEmptyTestSuite: true,
  retryLimit: 2,
  detached: false,
  crossOriginAttribute: true,
  browserSocketTimeout: 20000,
  buildWebpack: {
    options: {
      main: 'src/test.ts',
      polyfills: 'src/polyfills.ts',
      tsConfig: 'tsconfig.spec.json',
      karmaConfig: 'karma.conf.js',
      assets: [ 'src/favicon.ico', 'src/assets' ],
      styles: [ 'src/styles.css' ],
      scripts: [],
      watch: false,
      include: [ '**/search.effects.spec.ts' ],
      inlineStyleLanguage: 'css',
      stylePreprocessorOptions: { includePaths: [] },
      sourceMap: true,
      progress: true,
      poll: undefined,
      preserveSymlinks: undefined,
      browsers: undefined,
      codeCoverage: false,
      codeCoverageExclude: [],
      fileReplacements: [],
      reporters: [],
      webWorkerTsConfig: undefined
    },
    webpackConfig: {
      mode: 'development',
      devtool: false,
      target: [ 'web', 'es2015' ],
      profile: false,
      resolve: {
        roots: [
          '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey'
        ],
        extensions: [ '.ts', '.tsx', '.mjs', '.js' ],
        symlinks: true,
        modules: [
          '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey',
          'node_modules'
        ],
        mainFields: [ 'es2020', 'es2015', 'browser', 'module', 'main' ],
        conditionNames: [ 'es2020', 'es2015', '...' ]
      },
      resolveLoader: { symlinks: true },
      context: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey',
      entry: {
        main: [
          '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/test.ts'
        ],
        polyfills: [
          '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/polyfills.ts'
        ],
        styles: [
          '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
        ]
      },
      externals: [],
      output: {
        uniqueName: 'book-monkey',
        hashFunction: 'xxhash64',
        clean: true,
        path: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey',
        publicPath: '',
        filename: '[name].js',
        chunkFilename: '[name].js',
        libraryTarget: undefined,
        crossOriginLoading: false,
        trustedTypes: 'angular#bundler',
        scriptType: 'module'
      },
      watch: true,
      watchOptions: { poll: undefined, ignored: undefined },
      performance: { hints: false },
      ignoreWarnings: [
        /Failed to parse source map from/,
        /Add postcss as project dependency/,
        /"@charset" must be the first rule in the file/
      ],
      module: {
        strictExportPresence: true,
        parser: { javascript: { url: false, worker: false } },
        rules: [
          {
            test: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/test.ts',
            use: {
              loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/webpack/plugins/single-test-transform.js',
              options: {
                files: [ 'app/search/search.effects.spec.ts' ],
                logger: Logger {
                  _isScalar: false,
                  name: 'book-monkey:test:',
                  parent: null,
                  _subject: <ref *2> Subject {
                    _isScalar: false,
                    observers: [
                      <ref *1> Subscriber {
                        closed: false,
                        _parentOrParents: null,
                        _subscriptions: [
                          SubjectSubscription {
                            closed: false,
                            _parentOrParents: [Circular *1],
                            _subscriptions: null,
                            subject: [Circular *2],
                            subscriber: [Circular *1]
                          }
                        ],
                        syncErrorValue: null,
                        syncErrorThrown: false,
                        syncErrorThrowable: true,
                        isStopped: false,
                        destination: <ref *3> SafeSubscriber {
                          closed: false,
                          _parentOrParents: null,
                          _subscriptions: null,
                          syncErrorValue: null,
                          syncErrorThrown: false,
                          syncErrorThrowable: false,
                          isStopped: false,
                          destination: {
                            closed: true,
                            next: [Function: next],
                            error: [Function: error],
                            complete: [Function: complete]
                          },
                          _parentSubscriber: [Circular *1],
                          _context: [Circular *3],
                          _next: [Function (anonymous)],
                          _error: undefined,
                          _complete: undefined
                        }
                      },
                      <ref *4> Subscriber {
                        closed: false,
                        _parentOrParents: null,
                        _subscriptions: [
                          SubjectSubscription {
                            closed: false,
                            _parentOrParents: [Circular *4],
                            _subscriptions: null,
                            subject: [Circular *2],
                            subscriber: [Circular *4]
                          }
                        ],
                        syncErrorValue: null,
                        syncErrorThrown: false,
                        syncErrorThrowable: true,
                        isStopped: false,
                        destination: <ref *5> SafeSubscriber {
                          closed: false,
                          _parentOrParents: null,
                          _subscriptions: null,
                          syncErrorValue: null,
                          syncErrorThrown: false,
                          syncErrorThrowable: false,
                          isStopped: false,
                          destination: {
                            closed: true,
                            next: [Function: next],
                            error: [Function: error],
                            complete: [Function: complete]
                          },
                          _parentSubscriber: [Circular *4],
                          _context: [Circular *5],
                          _next: undefined,
                          _error: undefined,
                          _complete: [Function (anonymous)]
                        }
                      }
                    ],
                    closed: false,
                    isStopped: false,
                    hasError: false,
                    thrownError: null
                  },
                  _obs: Observable {
                    _isScalar: false,
                    source: <ref *2> Subject {
                      _isScalar: false,
                      observers: [
                        <ref *1> Subscriber {
                          closed: false,
                          _parentOrParents: null,
                          _subscriptions: [
                            SubjectSubscription {
                              closed: false,
                              _parentOrParents: [Circular *1],
                              _subscriptions: null,
                              subject: [Circular *2],
                              subscriber: [Circular *1]
                            }
                          ],
                          syncErrorValue: null,
                          syncErrorThrown: false,
                          syncErrorThrowable: true,
                          isStopped: false,
                          destination: <ref *3> SafeSubscriber {
                            closed: false,
                            _parentOrParents: null,
                            _subscriptions: null,
                            syncErrorValue: null,
                            syncErrorThrown: false,
                            syncErrorThrowable: false,
                            isStopped: false,
                            destination: {
                              closed: true,
                              next: [Function: next],
                              error: [Function: error],
                              complete: [Function: complete]
                            },
                            _parentSubscriber: [Circular *1],
                            _context: [Circular *3],
                            _next: [Function (anonymous)],
                            _error: undefined,
                            _complete: undefined
                          }
                        },
                        <ref *4> Subscriber {
                          closed: false,
                          _parentOrParents: null,
                          _subscriptions: [
                            SubjectSubscription {
                              closed: false,
                              _parentOrParents: [Circular *4],
                              _subscriptions: null,
                              subject: [Circular *2],
                              subscriber: [Circular *4]
                            }
                          ],
                          syncErrorValue: null,
                          syncErrorThrown: false,
                          syncErrorThrowable: true,
                          isStopped: false,
                          destination: <ref *5> SafeSubscriber {
                            closed: false,
                            _parentOrParents: null,
                            _subscriptions: null,
                            syncErrorValue: null,
                            syncErrorThrown: false,
                            syncErrorThrowable: false,
                            isStopped: false,
                            destination: {
                              closed: true,
                              next: [Function: next],
                              error: [Function: error],
                              complete: [Function: complete]
                            },
                            _parentSubscriber: [Circular *4],
                            _context: [Circular *5],
                            _next: undefined,
                            _error: undefined,
                            _complete: [Function (anonymous)]
                          }
                        }
                      ],
                      closed: false,
                      isStopped: false,
                      hasError: false,
                      thrownError: null
                    }
                  },
                  _subscription: null,
                  _metadata: { name: 'book-monkey:test:', path: [] }
                }
              }
            }
          },
          {
            test: /\.?(svg|html)$/,
            resourceQuery: /\?ngResource/,
            type: 'asset/source'
          },
          { test: /[/\\]rxjs[/\\]add[/\\].+\.js$/, sideEffects: true },
          {
            test: /\.[cm]?[tj]sx?$/,
            resolve: { fullySpecified: false },
            exclude: [
              /[\\/]node_modules[/\\](?:core-js|@babel|tslib|web-animations-js|web-streams-polyfill|whatwg-url)[/\\]/
            ],
            use: [
              {
                loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js',
                options: {
                  cacheDirectory: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/.angular/cache/14.1.3/babel-webpack',
                  scriptTarget: 7,
                  aot: false,
                  optimize: false,
                  supportedBrowsers: [
                    'chrome 104',
                    'edge 104',
                    'edge 103',
                    'firefox 103',
                    'firefox 102',
                    'firefox 91',
                    'ios_saf 15.6',
                    'ios_saf 15.5',
                    'ios_saf 15.4',
                    'ios_saf 15.2-15.3',
                    'ios_saf 15.0-15.1',
                    'ios_saf 14.5-14.8',
                    'ios_saf 14.0-14.4',
                    'safari 15.6',
                    'safari 15.5',
                    'safari 15.4',
                    'safari 15.2-15.3',
                    'safari 15.1',
                    'safari 15',
                    'safari 14.1',
                    'safari 14'
                  ],
                  instrumentCode: undefined
                }
              }
            ]
          },
          {
            test: /\.[cm]?jsx?$/,
            enforce: 'pre',
            loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/source-map-loader/dist/cjs.js',
            options: {
              filterSourceMappingUrl: [Function: filterSourceMappingUrl]
            }
          },
          {
            test: /\.[cm]?tsx?$/,
            loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@ngtools/webpack/src/ivy/index.js',
            exclude: [
              /[\\/]node_modules[/\\](?:css-loader|mini-css-extract-plugin|webpack-dev-server|webpack)[/\\]/
            ]
          },
          {
            test: /\.(?:css)$/i,
            rules: [
              {
                oneOf: [
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/mini-css-extract-plugin/dist/loader.js'
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/css-loader/dist/cjs.js',
                        options: { url: false, sourceMap: true }
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false },
                          sourceMap: true
                        }
                      }
                    ],
                    include: [
                      '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
                    ],
                    resourceQuery: { not: [ /\?ngResource/ ] }
                  },
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false }
                        }
                      }
                    ],
                    type: 'asset/source',
                    resourceQuery: /\?ngResource/
                  }
                ]
              },
              { use: [] }
            ]
          },
          {
            test: /\.(?:scss)$/i,
            rules: [
              {
                oneOf: [
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/mini-css-extract-plugin/dist/loader.js'
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/css-loader/dist/cjs.js',
                        options: { url: false, sourceMap: true }
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false },
                          sourceMap: true
                        }
                      }
                    ],
                    include: [
                      '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
                    ],
                    resourceQuery: { not: [ /\?ngResource/ ] }
                  },
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false }
                        }
                      }
                    ],
                    type: 'asset/source',
                    resourceQuery: /\?ngResource/
                  }
                ]
              },
              {
                use: [
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/resolve-url-loader/index.js',
                    options: { sourceMap: true }
                  },
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/sass-loader/dist/cjs.js',
                    options: {
                      implementation: SassWorkerImplementation {
                        workers: [],
                        availableWorkers: [],
                        requests: Map(0) {},
                        idCounter: 1,
                        nextWorkerIndex: 0
                      },
                      sourceMap: true,
                      sassOptions: {
                        fiber: false,
                        precision: 8,
                        includePaths: [],
                        outputStyle: 'expanded',
                        quietDeps: true,
                        verbose: undefined
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            test: /\.(?:sass)$/i,
            rules: [
              {
                oneOf: [
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/mini-css-extract-plugin/dist/loader.js'
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/css-loader/dist/cjs.js',
                        options: { url: false, sourceMap: true }
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false },
                          sourceMap: true
                        }
                      }
                    ],
                    include: [
                      '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
                    ],
                    resourceQuery: { not: [ /\?ngResource/ ] }
                  },
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false }
                        }
                      }
                    ],
                    type: 'asset/source',
                    resourceQuery: /\?ngResource/
                  }
                ]
              },
              {
                use: [
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/resolve-url-loader/index.js',
                    options: { sourceMap: true }
                  },
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/sass-loader/dist/cjs.js',
                    options: {
                      implementation: SassWorkerImplementation {
                        workers: [],
                        availableWorkers: [],
                        requests: Map(0) {},
                        idCounter: 1,
                        nextWorkerIndex: 0
                      },
                      sourceMap: true,
                      sassOptions: {
                        fiber: false,
                        indentedSyntax: true,
                        precision: 8,
                        includePaths: [],
                        outputStyle: 'expanded',
                        quietDeps: true,
                        verbose: undefined
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            test: /\.(?:less)$/i,
            rules: [
              {
                oneOf: [
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/mini-css-extract-plugin/dist/loader.js'
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/css-loader/dist/cjs.js',
                        options: { url: false, sourceMap: true }
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false },
                          sourceMap: true
                        }
                      }
                    ],
                    include: [
                      '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
                    ],
                    resourceQuery: { not: [ /\?ngResource/ ] }
                  },
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false }
                        }
                      }
                    ],
                    type: 'asset/source',
                    resourceQuery: /\?ngResource/
                  }
                ]
              },
              {
                use: [
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/less-loader/dist/cjs.js',
                    options: {
                      implementation: {
                        node: [Function (anonymous)],
                        color: [Function (anonymous)],
                        atrule: [Function (anonymous)],
                        detachedruleset: [Function (anonymous)],
                        operation: [Function (anonymous)],
                        dimension: [Function (anonymous)],
                        unit: [Function (anonymous)],
                        keyword: [Function (anonymous)],
                        variable: [Function (anonymous)],
                        property: [Function (anonymous)],
                        ruleset: [Function (anonymous)],
                        element: [Function (anonymous)],
                        attribute: [Function (anonymous)],
                        combinator: [Function (anonymous)],
                        selector: [Function (anonymous)],
                        quoted: [Function (anonymous)],
                        expression: [Function (anonymous)],
                        declaration: [Function (anonymous)],
                        call: [Function (anonymous)],
                        url: [Function (anonymous)],
                        import: [Function (anonymous)],
                        comment: [Function (anonymous)],
                        anonymous: [Function (anonymous)],
                        value: [Function (anonymous)],
                        javascript: [Function (anonymous)],
                        assignment: [Function (anonymous)],
                        condition: [Function (anonymous)],
                        paren: [Function (anonymous)],
                        media: [Function (anonymous)],
                        unicodedescriptor: [Function (anonymous)],
                        negative: [Function (anonymous)],
                        extend: [Function (anonymous)],
                        variablecall: [Function (anonymous)],
                        namespacevalue: [Function (anonymous)],
                        mixin: [Object: null prototype] {
                          call: [Function (anonymous)],
                          definition: [Function (anonymous)]
                        },
                        createFromEnvironment: [Function: default_1],
                        lesscHelper: {
                          stylize: [Function: stylize],
                          printUsage: [Function: printUsage]
                        },
                        PluginLoader: [Function: PluginLoader],
                        fs: {
                          appendFile: [Function: appendFile],
                          appendFileSync: [Function: appendFileSync],
                          access: [Function: access],
                          accessSync: [Function: accessSync],
                          chown: [Function (anonymous)],
                          chownSync: [Function (anonymous)],
                          chmod: [Function (anonymous)],
                          chmodSync: [Function (anonymous)],
                          close: [Function: close],
                          closeSync: [Function: closeSync],
                          copyFile: [Function: copyFile],
                          copyFileSync: [Function: copyFileSync],
                          cp: [Function: cp],
                          cpSync: [Function: cpSync],
                          createReadStream: [Function: createReadStream],
                          createWriteStream: [Function: createWriteStream],
                          exists: [Function: exists],
                          existsSync: [Function: existsSync],
                          fchown: [Function (anonymous)],
                          fchownSync: [Function (anonymous)],
                          fchmod: [Function (anonymous)],
                          fchmodSync: [Function (anonymous)],
                          fdatasync: [Function: fdatasync],
                          fdatasyncSync: [Function: fdatasyncSync],
                          fstat: [Function (anonymous)],
                          fstatSync: [Function (anonymous)],
                          fsync: [Function: fsync],
                          fsyncSync: [Function: fsyncSync],
                          ftruncate: [Function: ftruncate],
                          ftruncateSync: [Function: ftruncateSync],
                          futimes: [Function: futimes],
                          futimesSync: [Function: futimesSync],
                          lchown: [Function (anonymous)],
                          lchownSync: [Function (anonymous)],
                          lchmod: [Function (anonymous)],
                          lchmodSync: [Function (anonymous)],
                          link: [Function: link],
                          linkSync: [Function: linkSync],
                          lstat: [Function (anonymous)],
                          lstatSync: [Function (anonymous)],
                          lutimes: [Function: lutimes],
                          lutimesSync: [Function: lutimesSync],
                          mkdir: [Function: mkdir],
                          mkdirSync: [Function: mkdirSync],
                          mkdtemp: [Function: mkdtemp],
                          mkdtempSync: [Function: mkdtempSync],
                          open: [Function: open],
                          openSync: [Function: openSync],
                          opendir: [Function: opendir],
                          opendirSync: [Function: opendirSync],
                          readdir: [Function: readdir],
                          readdirSync: [Function: readdirSync],
                          read: [Function: read],
                          readSync: [Function (anonymous)],
                          readv: [Function: readv],
                          readvSync: [Function: readvSync],
                          readFile: [Function: readFile],
                          readFileSync: [Function: readFileSync],
                          readlink: [Function: readlink],
                          readlinkSync: [Function: readlinkSync],
                          realpath: [Function: realpath] {
                            native: [Function (anonymous)]
                          },
                          realpathSync: [Function: realpathSync] {
                            native: [Function (anonymous)]
                          },
                          rename: [Function: rename],
                          renameSync: [Function: renameSync],
                          rm: [Function: rm],
                          rmSync: [Function: rmSync],
                          rmdir: [Function: rmdir],
                          rmdirSync: [Function: rmdirSync],
                          stat: [Function (anonymous)],
                          statSync: [Function (anonymous)],
                          symlink: [Function: symlink],
                          symlinkSync: [Function: symlinkSync],
                          truncate: [Function: truncate],
                          truncateSync: [Function: truncateSync],
                          unwatchFile: [Function: unwatchFile],
                          unlink: [Function: unlink],
                          unlinkSync: [Function: unlinkSync],
                          utimes: [Function: utimes],
                          utimesSync: [Function: utimesSync],
                          watch: [Function: watch],
                          watchFile: [Function: watchFile],
                          writeFile: [Function: writeFile],
                          writeFileSync: [Function: writeFileSync],
                          write: [Function: write],
                          writeSync: [Function: writeSync],
                          writev: [Function: writev],
                          writevSync: [Function: writevSync],
                          Dir: [class Dir],
                          Dirent: [class Dirent],
                          Stats: [Function: Stats],
                          ReadStream: [Getter/Setter],
                          WriteStream: [Getter/Setter],
                          FileReadStream: [Getter/Setter],
                          FileWriteStream: [Getter/Setter],
                          _toUnixTimestamp: [Function: toUnixTimestamp],
                          F_OK: 0,
                          R_OK: 4,
                          W_OK: 2,
                          X_OK: 1,
                          constants: [Object: null prototype] {
                            UV_FS_SYMLINK_DIR: 1,
                            UV_FS_SYMLINK_JUNCTION: 2,
                            O_RDONLY: 0,
                            O_WRONLY: 1,
                            O_RDWR: 2,
                            UV_DIRENT_UNKNOWN: 0,
                            UV_DIRENT_FILE: 1,
                            UV_DIRENT_DIR: 2,
                            UV_DIRENT_LINK: 3,
                            UV_DIRENT_FIFO: 4,
                            UV_DIRENT_SOCKET: 5,
                            UV_DIRENT_CHAR: 6,
                            UV_DIRENT_BLOCK: 7,
                            S_IFMT: 61440,
                            S_IFREG: 32768,
                            S_IFDIR: 16384,
                            S_IFCHR: 8192,
                            S_IFBLK: 24576,
                            S_IFIFO: 4096,
                            S_IFLNK: 40960,
                            S_IFSOCK: 49152,
                            O_CREAT: 512,
                            O_EXCL: 2048,
                            UV_FS_O_FILEMAP: 0,
                            O_NOCTTY: 131072,
                            O_TRUNC: 1024,
                            O_APPEND: 8,
                            O_DIRECTORY: 1048576,
                            O_NOFOLLOW: 256,
                            O_SYNC: 128,
                            O_DSYNC: 4194304,
                            O_SYMLINK: 2097152,
                            O_NONBLOCK: 4,
                            S_IRWXU: 448,
                            S_IRUSR: 256,
                            S_IWUSR: 128,
                            S_IXUSR: 64,
                            S_IRWXG: 56,
                            S_IRGRP: 32,
                            S_IWGRP: 16,
                            S_IXGRP: 8,
                            S_IRWXO: 7,
                            S_IROTH: 4,
                            S_IWOTH: 2,
                            S_IXOTH: 1,
                            F_OK: 0,
                            R_OK: 4,
                            W_OK: 2,
                            X_OK: 1,
                            UV_FS_COPYFILE_EXCL: 1,
                            COPYFILE_EXCL: 1,
                            UV_FS_COPYFILE_FICLONE: 2,
                            COPYFILE_FICLONE: 2,
                            UV_FS_COPYFILE_FICLONE_FORCE: 4,
                            COPYFILE_FICLONE_FORCE: 4
                          },
                          promises: [Getter],
                          gracefulify: [Function: patch]
                        },
                        FileManager: [Function: FileManager],
                        UrlFileManager: [Function: UrlFileManager],
                        options: {
                          javascriptEnabled: false,
                          depends: false,
                          compress: false,
                          lint: false,
                          paths: [],
                          color: true,
                          strictImports: false,
                          insecure: false,
                          rootpath: '',
                          rewriteUrls: false,
                          math: 1,
                          strictUnits: false,
                          globalVars: null,
                          modifyVars: null,
                          urlArgs: ''
                        }
                      },
                      sourceMap: true,
                      lessOptions: { javascriptEnabled: true, paths: [] }
                    }
                  }
                ]
              }
            ]
          },
          {
            test: /\.(?:styl)$/i,
            rules: [
              {
                oneOf: [
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/mini-css-extract-plugin/dist/loader.js'
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/css-loader/dist/cjs.js',
                        options: { url: false, sourceMap: true }
                      },
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false },
                          sourceMap: true
                        }
                      }
                    ],
                    include: [
                      '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/styles.css'
                    ],
                    resourceQuery: { not: [ /\?ngResource/ ] }
                  },
                  {
                    use: [
                      {
                        loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/postcss-loader/dist/cjs.js',
                        options: {
                          implementation: <ref *23> [Function: postcss] {
                            plugin: [Function: plugin],
                            stringify: <ref *6> [Function: stringify] {
                              default: [Circular *6]
                            },
                            parse: <ref *7> [Function: parse] {
                              default: [Circular *7]
                            },
                            fromJSON: <ref *8> [Function: fromJSON] {
                              default: [Circular *8]
                            },
                            list: <ref *9> {
                              split: [Function: split],
                              space: [Function: space],
                              comma: [Function: comma],
                              default: [Circular *9]
                            },
                            comment: [Function (anonymous)],
                            atRule: [Function (anonymous)],
                            decl: [Function (anonymous)],
                            rule: [Function (anonymous)],
                            root: [Function (anonymous)],
                            document: [Function (anonymous)],
                            CssSyntaxError: <ref *10> [class CssSyntaxError extends Error] {
                              default: [Circular *10]
                            },
                            Declaration: <ref *11> [class Declaration extends Node] {
                              default: [Circular *11]
                            },
                            Container: <ref *12> [class Container extends Node] {
                              registerParse: [Function (anonymous)],
                              registerRule: [Function (anonymous)],
                              registerAtRule: [Function (anonymous)],
                              default: [Circular *12],
                              rebuild: [Function (anonymous)]
                            },
                            Processor: <ref *13> [class Processor] {
                              default: [Circular *13]
                            },
                            Document: <ref *14> [class Document extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *14]
                            },
                            Comment: <ref *15> [class Comment extends Node] {
                              default: [Circular *15]
                            },
                            Warning: <ref *16> [class Warning] {
                              default: [Circular *16]
                            },
                            AtRule: <ref *17> [class AtRule extends Container] {
                              default: [Circular *17]
                            },
                            Result: <ref *18> [class Result] {
                              default: [Circular *18]
                            },
                            Input: <ref *19> [class Input] {
                              default: [Circular *19]
                            },
                            Rule: <ref *20> [class Rule extends Container] {
                              default: [Circular *20]
                            },
                            Root: <ref *21> [class Root extends Container] {
                              registerLazyResult: [Function (anonymous)],
                              registerProcessor: [Function (anonymous)],
                              default: [Circular *21]
                            },
                            Node: <ref *22> [class Node] {
                              default: [Circular *22]
                            },
                            default: [Circular *23]
                          },
                          postcssOptions: [Function: optionGenerator] { config: false }
                        }
                      }
                    ],
                    type: 'asset/source',
                    resourceQuery: /\?ngResource/
                  }
                ]
              },
              {
                use: [
                  {
                    loader: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/stylus-loader/dist/cjs.js',
                    options: {
                      sourceMap: true,
                      stylusOptions: {
                        compress: false,
                        sourceMap: { comment: false },
                        paths: []
                      }
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      experiments: {
        backCompat: false,
        syncWebAssembly: true,
        asyncWebAssembly: true
      },
      infrastructureLogging: { debug: undefined, level: 'error' },
      stats: {
        all: false,
        colors: true,
        hash: true,
        timings: true,
        chunks: true,
        builtAt: true,
        warnings: true,
        errors: true,
        assets: true,
        cachedAssets: true,
        ids: true,
        entrypoints: true
      },
      cache: {
        type: 'filesystem',
        profile: undefined,
        cacheDirectory: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/.angular/cache/14.1.3/angular-webpack',
        maxMemoryGenerations: 1,
        name: '4142278577ce3b0ffb558725a26111fcbe79977f'
      },
      optimization: {
        minimizer: [],
        moduleIds: 'deterministic',
        chunkIds: 'named',
        emitOnErrors: false,
        runtimeChunk: 'single',
        splitChunks: {
          maxAsyncRequests: Infinity,
          cacheGroups: {
            default: false,
            common: false,
            vendors: false,
            defaultVendors: {
              name: 'vendor',
              chunks: [Function: chunks],
              enforce: true,
              test: /[\\/]node_modules[\\/]/
            }
          }
        }
      },
      plugins: [
        NamedChunksPlugin {},
        DedupeModuleResolvePlugin {
          options: { verbose: undefined },
          modules: Map(0) {}
        },
        ProgressPlugin {
          profile: false,
          handler: [Function: handler],
          modulesCount: 5000,
          dependenciesCount: 10000,
          showEntries: true,
          showModules: true,
          showDependencies: true,
          showActiveModules: false,
          percentBy: undefined
        },
        CopyPlugin {
          patterns: [
            {
              context: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/',
              to: '',
              from: 'favicon.ico',
              noErrorOnMissing: true,
              force: true,
              globOptions: {
                dot: true,
                followSymbolicLinks: false,
                ignore: [
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/.gitkeep',
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/**/.DS_Store',
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/**/Thumbs.db'
                ]
              },
              priority: 0
            },
            {
              context: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/assets/',
              to: 'assets/',
              from: '**/*',
              noErrorOnMissing: true,
              force: true,
              globOptions: {
                dot: true,
                followSymbolicLinks: false,
                ignore: [
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/assets/.gitkeep',
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/assets/**/.DS_Store',
                  '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/src/assets/**/Thumbs.db'
                ]
              },
              priority: 1
            }
          ],
          options: {}
        },
        DevToolsIgnorePlugin {},
        SourceMapDevToolPlugin {
          sourceMapFilename: '[file].map',
          sourceMappingURLComment: '\n//# sourceMappingURL=[url]',
          moduleFilenameTemplate: '[resource-path]',
          fallbackModuleFilenameTemplate: 'webpack://[namespace]/[resourcePath]?[hash]',
          namespace: '',
          options: {
            filename: '[file].map',
            include: [ /js$/, /css$/ ],
            sourceRoot: 'webpack:///',
            moduleFilenameTemplate: '[resource-path]',
            append: undefined
          }
        },
        AngularWebpackPlugin {
          fileDependencies: Map(0) {},
          requiredFilesToEmit: Set(0) {},
          requiredFilesToEmitCache: Map(0) {},
          fileEmitHistory: Map(0) {},
          pluginOptions: {
            emitClassMetadata: false,
            emitNgModuleScope: true,
            jitMode: true,
            fileReplacements: {},
            substitutions: {},
            directTemplateLoading: true,
            tsconfig: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/tsconfig.spec.json',
            compilerOptions: {
              sourceMap: true,
              declaration: false,
              declarationMap: false,
              preserveSymlinks: false
            },
            inlineStyleFileExtension: 'css'
          }
        },
        AnyComponentStyleBudgetChecker { budgets: [] },
        { apply: [Function: apply] },
        MiniCssExtractPlugin {
          _sortedModulesCache: WeakMap { <items unknown> },
          options: {
            filename: '[name].css',
            ignoreOrder: false,
            experimentalUseImportModule: undefined,
            runtime: true,
            chunkFilename: '[name].css'
          },
          runtimeOptions: {
            insert: undefined,
            linkType: 'text/css',
            attributes: undefined
          }
        },
        SuppressExtractedTextChunksWebpackPlugin {}
      ],
      node: false
    },
    logger: Logger {
      _isScalar: false,
      name: 'book-monkey:test:',
      parent: null,
      _subject: <ref *2> Subject {
        _isScalar: false,
        observers: [
          <ref *1> Subscriber {
            closed: false,
            _parentOrParents: null,
            _subscriptions: [
              SubjectSubscription {
                closed: false,
                _parentOrParents: [Circular *1],
                _subscriptions: null,
                subject: [Circular *2],
                subscriber: [Circular *1]
              }
            ],
            syncErrorValue: null,
            syncErrorThrown: false,
            syncErrorThrowable: true,
            isStopped: false,
            destination: <ref *3> SafeSubscriber {
              closed: false,
              _parentOrParents: null,
              _subscriptions: null,
              syncErrorValue: null,
              syncErrorThrown: false,
              syncErrorThrowable: false,
              isStopped: false,
              destination: {
                closed: true,
                next: [Function: next],
                error: [Function: error],
                complete: [Function: complete]
              },
              _parentSubscriber: [Circular *1],
              _context: [Circular *3],
              _next: [Function (anonymous)],
              _error: undefined,
              _complete: undefined
            }
          },
          <ref *4> Subscriber {
            closed: false,
            _parentOrParents: null,
            _subscriptions: [
              SubjectSubscription {
                closed: false,
                _parentOrParents: [Circular *4],
                _subscriptions: null,
                subject: [Circular *2],
                subscriber: [Circular *4]
              }
            ],
            syncErrorValue: null,
            syncErrorThrown: false,
            syncErrorThrowable: true,
            isStopped: false,
            destination: <ref *5> SafeSubscriber {
              closed: false,
              _parentOrParents: null,
              _subscriptions: null,
              syncErrorValue: null,
              syncErrorThrown: false,
              syncErrorThrowable: false,
              isStopped: false,
              destination: {
                closed: true,
                next: [Function: next],
                error: [Function: error],
                complete: [Function: complete]
              },
              _parentSubscriber: [Circular *4],
              _context: [Circular *5],
              _next: undefined,
              _error: undefined,
              _complete: [Function (anonymous)]
            }
          }
        ],
        closed: false,
        isStopped: false,
        hasError: false,
        thrownError: null
      },
      _obs: Observable {
        _isScalar: false,
        source: <ref *2> Subject {
          _isScalar: false,
          observers: [
            <ref *1> Subscriber {
              closed: false,
              _parentOrParents: null,
              _subscriptions: [
                SubjectSubscription {
                  closed: false,
                  _parentOrParents: [Circular *1],
                  _subscriptions: null,
                  subject: [Circular *2],
                  subscriber: [Circular *1]
                }
              ],
              syncErrorValue: null,
              syncErrorThrown: false,
              syncErrorThrowable: true,
              isStopped: false,
              destination: <ref *3> SafeSubscriber {
                closed: false,
                _parentOrParents: null,
                _subscriptions: null,
                syncErrorValue: null,
                syncErrorThrown: false,
                syncErrorThrowable: false,
                isStopped: false,
                destination: {
                  closed: true,
                  next: [Function: next],
                  error: [Function: error],
                  complete: [Function: complete]
                },
                _parentSubscriber: [Circular *1],
                _context: [Circular *3],
                _next: [Function (anonymous)],
                _error: undefined,
                _complete: undefined
              }
            },
            <ref *4> Subscriber {
              closed: false,
              _parentOrParents: null,
              _subscriptions: [
                SubjectSubscription {
                  closed: false,
                  _parentOrParents: [Circular *4],
                  _subscriptions: null,
                  subject: [Circular *2],
                  subscriber: [Circular *4]
                }
              ],
              syncErrorValue: null,
              syncErrorThrown: false,
              syncErrorThrowable: true,
              isStopped: false,
              destination: <ref *5> SafeSubscriber {
                closed: false,
                _parentOrParents: null,
                _subscriptions: null,
                syncErrorValue: null,
                syncErrorThrown: false,
                syncErrorThrowable: false,
                isStopped: false,
                destination: {
                  closed: true,
                  next: [Function: next],
                  error: [Function: error],
                  complete: [Function: complete]
                },
                _parentSubscriber: [Circular *4],
                _context: [Circular *5],
                _next: undefined,
                _error: undefined,
                _complete: [Function (anonymous)]
              }
            }
          ],
          closed: false,
          isStopped: false,
          hasError: false,
          thrownError: null
        }
      },
      _subscription: null,
      _metadata: { name: 'book-monkey:test:', path: [] }
    },
    failureCb: [Function (anonymous)],
    successCb: [Function (anonymous)]
  },
  jasmineHtmlReporter: { suppressAll: true },
  coverageReporter: {
    dir: '/Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/coverage/book-monkey',
    subdir: '.',
    reporters: [ { type: 'html' }, { type: 'text-summary' } ]
  }
}
03 10 2022 01:39:57.812:DEBUG [plugin]: Loading inline plugin defining framework:jasmine, reporter:karma-jasmine.
03 10 2022 01:39:57.812:DEBUG [plugin]: Loading inline plugin defining launcher:Chrome, launcher:ChromeHeadless, launcher:ChromeCanary, launcher:ChromeCanaryHeadless, launcher:Chromium, launcher:ChromiumHeadless, launcher:Dartium, test.
03 10 2022 01:39:57.812:DEBUG [plugin]: Loading inline plugin defining reporter:kjhtml.
03 10 2022 01:39:57.812:DEBUG [plugin]: Loading inline plugin defining preprocessor:coverage, reporter:coverage.
03 10 2022 01:39:57.812:DEBUG [plugin]: Loading inline plugin defining framework:@angular-devkit/build-angular, reporter:@angular-devkit/build-angular--sourcemap-reporter, reporter:@angular-devkit/build-angular--event-reporter, middleware:@angular-devkit/build-angular--blocker, middleware:@angular-devkit/build-angular--fallback.
03 10 2022 01:40:00.023:DEBUG [web-server]: Instantiating middleware
03 10 2022 01:40:00.024:DEBUG [reporter]: Trying to load reporter: @angular-devkit/build-angular--event-reporter
03 10 2022 01:40:00.024:DEBUG [reporter]: Trying to load color-version of reporter: @angular-devkit/build-angular--event-reporter (@angular-devkit/build-angular--event-reporter_color)
03 10 2022 01:40:00.024:DEBUG [reporter]: Couldn't load color-version.
03 10 2022 01:40:00.024:DEBUG [reporter]: Trying to load reporter: @angular-devkit/build-angular--sourcemap-reporter
03 10 2022 01:40:00.025:DEBUG [reporter]: Trying to load color-version of reporter: @angular-devkit/build-angular--sourcemap-reporter (@angular-devkit/build-angular--sourcemap-reporter_color)
03 10 2022 01:40:00.025:DEBUG [reporter]: Couldn't load color-version.
03 10 2022 01:40:00.031:DEBUG [reporter]: Trying to load reporter: kjhtml
03 10 2022 01:40:00.032:DEBUG [reporter]: Trying to load color-version of reporter: kjhtml (kjhtml_color)
03 10 2022 01:40:00.032:DEBUG [reporter]: Couldn't load color-version.
03 10 2022 01:40:00.048:INFO [karma-server]: Karma v6.3.20 server started at http://localhost:9877/
03 10 2022 01:40:00.048:INFO [launcher]: Launching browsers ChromeHeadless with concurrency unlimited
03 10 2022 01:40:00.050:INFO [launcher]: Starting browser ChromeHeadless
03 10 2022 01:40:00.050:DEBUG [launcher]: null -> BEING_CAPTURED
03 10 2022 01:40:00.050:DEBUG [temp-dir]: Creating temp dir at /var/folders/3z/5hsmh7s91nx4rcdk9f29f0smgwp36k/T/karma-25944297
03 10 2022 01:40:00.051:DEBUG [launcher]: /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --user-data-dir=/var/folders/3z/5hsmh7s91nx4rcdk9f29f0smgwp36k/T/karma-25944297 --enable-automation --no-default-browser-check --no-first-run --disable-default-apps --disable-popup-blocking --disable-translate --disable-background-timer-throttling --disable-renderer-backgrounding --disable-device-discovery-notifications http://localhost:9877/?id=25944297 --headless --disable-gpu --disable-dev-shm-usage --remote-debugging-port=9222
03 10 2022 01:40:00.338:DEBUG [web-server]: serving: /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma/static/client.html
03 10 2022 01:40:00.346:DEBUG [web-server]: serving: /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma/static/karma.js
03 10 2022 01:40:00.402:DEBUG [karma-server]: A browser has connected on socket boRCJ2stU0t1YAUqAAAB
03 10 2022 01:40:00.403:DEBUG [web-server]: upgrade /socket.io/?EIO=4&transport=websocket&sid=6_cYyGUI8P_ABijpAAAA
03 10 2022 01:40:00.410:DEBUG [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: undefined -> CONNECTED
03 10 2022 01:40:00.410:INFO [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: Connected on socket boRCJ2stU0t1YAUqAAAB with id 25944297
03 10 2022 01:40:00.411:DEBUG [launcher]: BEING_CAPTURED -> CAPTURED
03 10 2022 01:40:00.411:DEBUG [launcher]: ChromeHeadless (id 25944297) captured in 0.363 secs
03 10 2022 01:40:00.411:DEBUG [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: CONNECTED -> CONFIGURING
03 10 2022 01:40:00.413:DEBUG [middleware:karma]: custom files /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma/karma-context.html /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma/karma-debug.html null
03 10 2022 01:40:00.413:DEBUG [middleware:karma]: Serving customContextFile /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma/karma-context.html
03 10 2022 01:40:00.414:DEBUG [web-server]: serving: /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma/karma-context.html
03 10 2022 01:40:00.417:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/styles.css
03 10 2022 01:40:00.417:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/styles.css
03 10 2022 01:40:00.419:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/runtime.js
03 10 2022 01:40:00.419:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/runtime.js
03 10 2022 01:40:00.419:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/polyfills.js
03 10 2022 01:40:00.419:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/polyfills.js
03 10 2022 01:40:00.420:DEBUG [middleware:source-files]: Requesting /base/node_modules/source-map-support/browser-source-map-support.js?d396c5c772d39dd251c37919a75f287e2244d0a2
03 10 2022 01:40:00.420:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/source-map-support/browser-source-map-support.js
03 10 2022 01:40:00.420:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/source-map-support/browser-source-map-support.js
03 10 2022 01:40:00.420:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-source-map-support/lib/client.js?fcb459e84379f1ce8e91fe200d87463f3780ca1b
03 10 2022 01:40:00.420:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-source-map-support/lib/client.js
03 10 2022 01:40:00.420:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-source-map-support/lib/client.js
03 10 2022 01:40:00.421:DEBUG [middleware:source-files]: Requesting /base/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?9e8bf4ff78544afe6d14cf3d10c6d3a04d389d82
03 10 2022 01:40:00.421:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/jasmine-core/lib/jasmine-core/jasmine.js
03 10 2022 01:40:00.421:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/jasmine-core/lib/jasmine-core/jasmine.js
03 10 2022 01:40:00.422:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-jasmine-html-reporter/src/css/jasmine.css?3d18d846070bb4b7c5b23ab3e3e00086ad1d7ccd
03 10 2022 01:40:00.422:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/css/jasmine.css
03 10 2022 01:40:00.422:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/css/jasmine.css
03 10 2022 01:40:00.423:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-jasmine/lib/boot.js?760d54bbca4f739f1f8b252c1636d76201cc4e88
03 10 2022 01:40:00.423:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine/lib/boot.js
03 10 2022 01:40:00.423:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine/lib/boot.js
03 10 2022 01:40:00.423:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-jasmine/lib/adapter.js?819d052a6ccda48ccf69c2b6105ab3ea2072ae50
03 10 2022 01:40:00.423:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine/lib/adapter.js
03 10 2022 01:40:00.423:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine/lib/adapter.js
03 10 2022 01:40:00.424:DEBUG [web-server]: serving: /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma/static/context.js
03 10 2022 01:40:00.424:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-jasmine-html-reporter/src/lib/html.jasmine.reporter.js?bddb5700aa1b792e865c30f13e3bcb12d20e0ede
03 10 2022 01:40:00.424:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/lib/html.jasmine.reporter.js
03 10 2022 01:40:00.424:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/lib/html.jasmine.reporter.js
03 10 2022 01:40:00.424:DEBUG [middleware:source-files]: Requesting /base/node_modules/karma-jasmine-html-reporter/src/lib/adapter.js?57d0419040e918dc02359fd376fd736983bbf6fc
03 10 2022 01:40:00.425:DEBUG [middleware:source-files]: Fetching /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/lib/adapter.js
03 10 2022 01:40:00.425:DEBUG [web-server]: serving (cached): /Users/bodo.teichmann/dev/learning/angular_buch/book-monkey/node_modules/karma-jasmine-html-reporter/src/lib/adapter.js
03 10 2022 01:40:00.425:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/scripts.js
03 10 2022 01:40:00.425:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/scripts.js
03 10 2022 01:40:00.426:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/vendor.js
03 10 2022 01:40:00.426:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/vendor.js
03 10 2022 01:40:00.427:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/main.js
03 10 2022 01:40:00.427:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/main.js
03 10 2022 01:40:00.498:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/runtime.js
03 10 2022 01:40:00.498:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/runtime.js
03 10 2022 01:40:00.499:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/runtime.js
03 10 2022 01:40:00.499:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/runtime.js
03 10 2022 01:40:00.500:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/runtime.js.map
03 10 2022 01:40:00.500:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/runtime.js.map
03 10 2022 01:40:00.502:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/main.js
03 10 2022 01:40:00.502:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/main.js
03 10 2022 01:40:00.503:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/main.js
03 10 2022 01:40:00.503:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/main.js
03 10 2022 01:40:00.504:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/main.js.map
03 10 2022 01:40:00.504:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/main.js.map
03 10 2022 01:40:00.512:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/vendor.js
03 10 2022 01:40:00.512:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/vendor.js
03 10 2022 01:40:00.525:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/vendor.js
03 10 2022 01:40:00.525:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/vendor.js
03 10 2022 01:40:00.541:DEBUG [middleware:source-files]: Requesting /_karma_webpack_/vendor.js.map
03 10 2022 01:40:00.541:DEBUG [middleware:source-files]: Fetching /_karma_webpack_/vendor.js.map
03 10 2022 01:40:00.867:DEBUG [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: CONFIGURING -> EXECUTING
Chrome Headless 105.0.5195.125 (Mac OS 10.15.7): Executed 0 of 2[32m SUCCESS[39m (0 secs / 0 secs)
[1A[2KChrome Headless 105.0.5195.125 (Mac OS 10.15.7): Executed 1 of 2[32m SUCCESS[39m (0 secs / 0.008 secs)
[1A[2KChrome Headless 105.0.5195.125 (Mac OS 10.15.7): Executed 2 of 2[32m SUCCESS[39m (0 secs / 0.009 secs)
03 10 2022 01:40:00.884:DEBUG [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: EXECUTING -> CONNECTED
[1A[2KChrome Headless 105.0.5195.125 (Mac OS 10.15.7): Executed 2 of 2[32m SUCCESS[39m (0.017 secs / 0.009 secs)
03 10 2022 01:40:00.884:DEBUG [launcher]: CAPTURED -> BEING_KILLED
03 10 2022 01:40:00.884:DEBUG [launcher]: BEING_KILLED -> BEING_FORCE_KILLED
03 10 2022 01:40:00.884:DEBUG [Chrome Headless 105.0.5195.125 (Mac OS 10.15.7)]: CONNECTED -> DISCONNECTED
[32mTOTAL: 2 SUCCESS[39m
03 10 2022 01:40:00.885:DEBUG [karma-server]: Run complete, exiting.
03 10 2022 01:40:00.885:DEBUG [launcher]: Disconnecting all browsers
03 10 2022 01:40:00.885:DEBUG [launcher]: BEING_FORCE_KILLED -> BEING_FORCE_KILLED
03 10 2022 01:40:00.886:DEBUG [proxy]: Destroying proxy agents
03 10 2022 01:40:01.028:DEBUG [launcher]: Process ChromeHeadless exited with code null and signal SIGTERM
03 10 2022 01:40:01.028:DEBUG [temp-dir]: Cleaning temp dir /var/folders/3z/5hsmh7s91nx4rcdk9f29f0smgwp36k/T/karma-25944297
03 10 2022 01:40:01.042:DEBUG [launcher]: Finished all browsers
03 10 2022 01:40:01.133:DEBUG [launcher]: BEING_FORCE_KILLED -> FINISHED
03 10 2022 01:40:01.133:DEBUG [launcher]: FINISHED -> FINISHED
03 10 2022 01:40:01.144:DEBUG [karma-server]: Received stop event, exiting.
03 10 2022 01:40:01.144:DEBUG [launcher]: Disconnecting all browsers
03 10 2022 01:40:01.144:DEBUG [launcher]: FINISHED -> BEING_FORCE_KILLED
03 10 2022 01:40:01.144:DEBUG [proxy]: Destroying proxy agents
